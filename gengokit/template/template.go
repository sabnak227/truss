// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/cmd/NAME/main.gotemplate (356B)
// NAME-service/handlers/handlers.gotemplate (62B)
// NAME-service/handlers/hooks.gotemplate (62B)
// NAME-service/handlers/middlewares.gotemplate (75B)
// NAME-service/middlewares/instrumentation.gotemplate (1.837kB)
// NAME-service/middlewares/logging.gotemplate (763B)
// NAME-service/middlewares/middlewares.gotemplate (451B)
// NAME-service/middlewares/trace.gotemplate (2.417kB)
// NAME-service/svc/client/grpc/client.gotemplate (3.184kB)
// NAME-service/svc/client/http/client.gotemplate (105B)
// NAME-service/svc/endpoints.gotemplate (4.272kB)
// NAME-service/svc/server/endpoint.gotemplate (1.671kB)
// NAME-service/svc/server/run.gotemplate (5.595kB)
// NAME-service/svc/transport_grpc.gotemplate (3.158kB)
// NAME-service/svc/transport_http.gotemplate (106B)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x31\x6f\x83\x30\x14\x84\x67\xde\xaf\x38\x31\xc1\x50\xbc\x77\x0d\x1d\xb2\x34\x51\x9a\x76\x77\xe0\x00\xab\xc4\x20\xdb\x10\x45\xc8\xff\xbd\x82\x44\x55\xa6\x77\x4f\x77\xba\x4f\xef\x29\x85\xdd\x50\x13\x2d\x2d\x9d\x0e\xac\x71\xb9\x23\xb8\xc9\xfb\x02\xe5\x01\x9f\x87\x33\x3e\xca\xfd\xb9\x10\xa5\x70\xa2\x9b\xac\x35\xb6\x7d\x04\x70\x33\x7d\x8f\x61\xa6\xbb\x39\x13\x88\xd0\x19\x8f\xc6\xf4\xdc\xc2\x3f\x74\xde\x0c\xf6\x1d\xcb\x52\x3c\x75\x8c\x2f\x06\x4a\x1d\xf8\xea\xae\x7b\x8c\x22\xa3\xae\x7e\x75\x4b\x5c\xb5\xb1\x22\xe6\x3a\x0e\x2e\x20\x93\x24\x6d\x7a\xdd\xa6\x22\x89\x52\x38\xaf\xa8\x2f\xba\xd9\x54\x94\x24\x5d\x96\x62\xbf\xe5\x8e\x3a\x74\x78\x8b\x11\xca\xcf\x95\xf2\x74\x33\x5d\x2a\xb9\x48\x33\xd9\x6a\x6b\xcc\x72\x2c\x5b\xc5\xf7\x58\xeb\x40\xe8\xba\x76\xf4\x9e\x1e\xa6\x41\xe8\x78\x47\xa7\x67\xe2\x42\xda\xff\xd3\x02\xed\xfa\x95\x95\xef\x25\x59\x47\x71\xd4\xce\x33\xcb\x45\x92\x07\xa4\x38\x4d\x36\x7b\xca\x92\x8d\x9e\xfa\xb0\x1b\x6c\x63\xda\x5c\xa2\xfc\x05\x00\x00\xff\xff\x49\xa3\x9c\x96\x64\x01\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 356, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0xd, 0xff, 0x1e, 0xe5, 0xa9, 0x62, 0x3d, 0xb4, 0x16, 0xf5, 0xfd, 0x84, 0x56, 0x3e, 0xc4, 0x7d, 0x9e, 0x50, 0x8f, 0x7b, 0xc0, 0xcc, 0x27, 0x7f, 0xe7, 0x57, 0x20, 0x66, 0xd, 0x77, 0x87}}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1e, 0xcb, 0xd5, 0x72, 0x80, 0xc6, 0xf9, 0x82, 0x4b, 0xe0, 0x8b, 0x90, 0xb8, 0x9b, 0xbc, 0x5d, 0x8d, 0x12, 0xd4, 0x8e, 0x54, 0xf6, 0x72, 0xcb, 0xef, 0xf5, 0x12, 0xd0, 0xe1, 0xb8, 0x41, 0xc8}}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1e, 0xcb, 0xd5, 0x72, 0x80, 0xc6, 0xf9, 0x82, 0x4b, 0xe0, 0x8b, 0x90, 0xb8, 0x9b, 0xbc, 0x5d, 0x8d, 0x12, 0xd4, 0x8e, 0x54, 0xf6, 0x72, 0xcb, 0xef, 0xf5, 0x12, 0xd0, 0xe1, 0xb8, 0x41, 0xc8}}
	return a, nil
}

var _handlersMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0e\x02\x21\x0c\x05\xd0\xbd\xa7\xe8\x9a\x44\x7b\x18\x4f\x40\xec\xb7\x12\x81\x4e\xda\x4e\x66\x41\xb8\xfb\xbc\xb5\xb8\xd0\x1b\x20\xb5\x67\xfa\x19\xc1\x8a\xa9\xf6\x6f\xc9\xbf\x3a\xa5\xc3\x83\x13\xe3\xe8\x35\x11\x3c\x9a\x48\xc7\x55\x1d\xf1\x52\xa3\xaf\x39\x7d\x4c\x40\x85\xf7\x7e\xdc\x01\x00\x00\xff\xff\xcf\x9e\xe9\x81\x4b\x00\x00\x00")

func handlersMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGotemplate,
		"handlers/middlewares.gotemplate",
	)
}

func handlersMiddlewaresGotemplate() (*asset, error) {
	bytes, err := handlersMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.gotemplate", size: 75, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0xfe, 0x9d, 0x1a, 0xaf, 0x47, 0xe8, 0x97, 0x82, 0x24, 0x50, 0x17, 0xb4, 0x49, 0x73, 0x3b, 0x68, 0xb7, 0xe5, 0x3a, 0x3d, 0xb6, 0x15, 0x9d, 0xb1, 0x8f, 0xc4, 0x27, 0xaf, 0xa7, 0x3c, 0xc1}}
	return a, nil
}

var _middlewaresInstrumentationGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xc1\x6e\xe3\x46\x0c\x3d\x6b\xbe\x82\x15\x7c\x90\x0a\x67\x8c\x5e\x0d\xe4\xd0\x26\x45\x1b\x60\x37\x59\xac\x8d\xf6\x50\xf4\x20\x4b\xb4\x4c\xac\x34\xa3\xce\x50\x76\x0c\x61\xfe\xbd\xa0\x64\x3b\x92\xb3\xde\x08\x30\x2c\x8a\x8f\x9c\xc7\x37\x24\x17\x0b\x78\xb0\x05\x42\x89\x06\x5d\xc6\x58\xc0\xe6\x08\xec\x5a\xef\x35\x3c\xbe\xc0\xf3\xcb\x1a\x7e\x7f\x7c\x5a\x6b\xb5\x58\xc0\x57\x74\xad\x31\x64\xca\x01\x00\x07\xaa\x2a\xb0\x7b\x74\x07\x47\x8c\xc0\x3b\xf2\xb0\xa5\x0a\x7b\xf0\x5f\xe8\x3c\x59\xb3\x84\xae\xd3\xa7\xf7\x10\x46\x0e\x78\xcc\x18\xc7\x5e\xb1\x43\x50\xaa\xc9\xf2\x6f\x59\x89\x50\x53\x51\x54\x78\xc8\x1c\x7a\x25\x71\xeb\x73\x7a\xc8\xad\xe1\x8c\x8c\x1f\x43\xe0\xe0\xb2\xa6\x11\x6e\x99\xb3\xad\x29\x00\x4d\xd1\x58\x32\xec\x61\xeb\x6c\x0d\x1e\xdd\x9e\x72\xf4\x73\xa5\xa8\x6e\xac\x63\x48\x54\x14\x4b\x26\x7c\xe5\x58\x45\xf1\xb6\xee\xff\x98\x6a\x8c\x95\x8a\xe2\x92\x78\xd7\x6e\x74\x6e\xeb\x45\x69\xef\xbe\x11\x2f\xe4\x57\x23\x3b\xca\x7d\xac\xa2\x66\x03\x71\xd7\xe9\x2f\xbf\x3d\xf5\xe9\xbe\x64\xbc\x83\xbb\x10\x62\x95\x2a\xa5\xb6\xad\xc9\xe1\xc9\x78\x76\x6d\x8d\x86\x33\x26\x6b\x3e\x5f\xc8\x26\x0e\xff\x6b\xd1\xf3\x83\x6d\x0d\xc3\x29\xa5\xee\x2d\x74\x73\x40\xe7\x6e\x78\x4e\x71\x9f\x32\x46\x93\x1f\x2f\xfe\x3f\xc9\xb3\x2d\x5d\x56\xa7\x22\xe7\x6a\xa8\x54\x3f\x67\x35\x86\x70\xb2\xde\x0e\x87\x4e\x45\x0e\xb9\x75\x06\x84\x65\x62\xf0\x95\xa1\xd9\xe8\xef\x46\xa2\x4b\x7f\xe0\x93\x54\xe7\x5c\x74\x29\x96\x4c\xf9\x76\x9a\x20\xa2\x71\xb9\x4b\x00\x18\xdb\x73\x05\xa3\xe7\x5c\xfa\xf2\xca\x9e\xa2\xa6\x32\x2c\xaf\xec\x29\x56\xca\x5b\x5e\xd9\x73\x15\x45\x41\x45\x41\x85\xbe\xb1\xe8\xd6\x3d\x01\xd5\x4d\x85\xe2\xf0\x3f\x52\x81\x0c\x58\x57\xa0\x03\xb6\x92\x0e\x33\x4f\x95\xcc\x50\x96\xe3\x99\x9a\x07\xde\x39\xdb\x96\x3b\xdb\x32\x64\x50\x90\x67\x47\x9b\x56\xc6\xcd\x1f\x3d\x63\xad\x15\x1f\x1b\xbc\xa5\x22\xc8\xd7\x9c\x87\xab\x1b\xb5\x0e\x5c\xb7\x88\x8a\x2e\xcd\x33\x3c\xef\xfc\x1f\xb5\x90\x8a\xfa\x86\x78\x7b\x6e\x17\x2e\xf2\x75\xdd\x81\x78\x07\x33\x46\x58\xde\x83\x86\x10\x54\xd4\x75\x2e\x33\x25\xc2\x8c\xe4\xdb\x8c\xf1\x12\xfd\x19\x79\x67\x0b\x2f\xa0\x68\xb1\x80\xae\x9b\xd1\x29\xe3\x3b\xa9\xc7\x61\x93\x4e\x9e\xc8\xdd\xa7\x69\x9c\xdd\x53\x81\x13\x55\x45\x7d\x59\x06\x7b\xf2\xb4\xa1\x8a\xf8\xa8\x55\x14\xf5\x63\x99\x50\x7d\x4b\xe7\x74\x4c\x29\xc9\xf9\x15\x4e\x0b\x42\x3f\x0c\xff\xfd\x08\xc2\xcf\x3d\xc3\x3f\xac\xe0\x60\x46\xfa\xeb\xa0\xe9\xfa\xd8\x9c\xb9\xa6\x90\xc8\x4e\x7a\x0f\xf4\x8d\x35\x1e\x47\xc8\x7e\xdc\xe5\x67\x5d\xda\x4d\x3a\x77\x83\x25\x19\x51\x50\x56\x92\x7e\xb6\x87\x24\x1d\x86\xc9\x0f\x31\xf7\x40\xb5\x96\xcb\xd2\x57\xa4\x7b\x92\xa9\x12\x70\xb5\xf7\x92\xe1\x9f\x7f\x45\x19\x53\x76\x71\xdd\xdf\x40\x3c\x97\xdd\xb5\xb6\x9f\xec\x01\x1d\x5c\x82\xe5\x73\xcf\x24\x9e\xc3\xb6\x66\xbd\x6a\x1c\x19\x4e\xe4\xb0\x9f\xee\xc1\x50\x95\x86\x09\x43\xaa\xf5\xb8\x1d\xf5\xdf\xc4\xbb\xa4\xda\x7b\xad\x75\xaa\x7f\x2d\x8a\xe4\x97\xf4\x06\xfe\xd4\x7e\xd3\x88\x97\x8d\x2c\x69\x4c\xfa\x7a\x57\x64\x72\x4c\x7a\x0d\x52\xbd\xc2\xdc\x9a\xc2\x27\xe9\x55\xbe\xed\x98\x1b\x4c\xe5\x3b\x1d\x78\x9e\x87\x0f\xc9\x85\x41\x5c\x59\x66\xc3\x7a\xe8\x3a\x34\x45\x08\xaa\xeb\xee\x60\x78\x53\xff\x07\x00\x00\xff\xff\x61\xdd\x64\x3b\x2d\x07\x00\x00")

func middlewaresInstrumentationGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresInstrumentationGotemplate,
		"middlewares/instrumentation.gotemplate",
	)
}

func middlewaresInstrumentationGotemplate() (*asset, error) {
	bytes, err := middlewaresInstrumentationGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/instrumentation.gotemplate", size: 1837, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0xff, 0x5d, 0x78, 0x57, 0x14, 0x92, 0xda, 0xf1, 0xe7, 0x2b, 0x9b, 0x4f, 0x8b, 0x63, 0xb6, 0x43, 0xc, 0x84, 0x94, 0x97, 0x4, 0x64, 0x9d, 0x98, 0x3e, 0xae, 0x1f, 0x6, 0xb7, 0xdb, 0xd6}}
	return a, nil
}

var _middlewaresLoggingGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x6f\xdb\x30\x0c\x85\xcf\xd6\xaf\x20\x74\xb2\x01\xd7\xbe\xef\xda\xf6\x50\x20\x6b\x87\x2d\xd8\x5d\x91\x19\x85\x88\x4d\xb9\x94\x9c\x74\x30\xf4\xdf\x07\xd9\x6e\x96\x61\xd8\x41\xb0\xf8\xf8\xfc\x51\x8f\x6d\x0b\x8f\xbe\x43\x70\xc8\x28\x26\x62\x07\x87\x5f\x10\x65\x0a\xa1\x81\xa7\x37\x78\x7d\xdb\xc3\xf3\xd3\xcb\xbe\x51\x6d\x0b\xdf\x51\x26\x66\x62\xb7\x1a\xe0\x4a\x7d\x0f\xfe\x82\x72\x15\x8a\x08\xf1\x44\x01\x8e\xd4\xe3\x62\xfe\x89\x12\xc8\xf3\x17\x98\xe7\x66\xbb\xa7\x74\xd7\x80\x27\x13\xf1\xbe\x9b\xeb\x94\x94\x1a\x8d\x3d\x1b\x87\x30\x50\xd7\xf5\x78\x35\x82\x41\xe5\xff\xf6\x9f\x78\xb0\x9e\xa3\x21\x0e\xf7\x16\xb8\x8a\x19\xc7\xfc\x36\x23\x7e\xe2\x0e\x90\xbb\xd1\x13\xc7\x00\x47\xf1\x03\x04\x94\x0b\x59\x0c\xb5\x52\x34\x8c\x5e\x22\x94\xaa\xd0\x99\x84\x1f\x51\xab\x42\x47\x1a\x50\x2b\x55\x68\x47\xf1\x34\x1d\x1a\xeb\x87\xd6\xf9\x87\x33\xc5\x36\x9f\x4f\x9c\xfe\xaf\xa3\xf7\x2e\x37\xe7\xb9\x79\x59\x06\x7c\x33\xf1\x04\x0f\x29\x41\x1b\x2e\x56\xab\x4a\xa9\xe3\xc4\x16\x76\xde\x39\x62\xf7\xf5\xf6\xf4\xb2\xf7\xce\xa1\x40\xef\x5d\xb3\x5b\xae\x15\x84\x8b\x6d\x76\xe6\x80\x3d\x76\x7f\x8c\x30\xab\x42\x30\x4e\xc2\x90\x49\x25\x9b\x01\x21\x44\x21\x76\x35\x10\xdf\x12\x37\xcf\xdb\xa5\xfa\x57\xca\x8c\xbf\x20\x36\x7e\xc0\xb6\x85\xe6\x71\xfd\xd6\x20\xf8\x0e\xc4\x11\xe5\x68\x2c\xce\xa9\x82\x52\xc2\x78\xaf\xd4\x80\x22\xf9\x78\xa9\x16\x64\xd1\xe1\x11\x65\x45\x1e\xd0\x11\x43\xde\x67\xb3\xa7\x01\x37\x43\xb1\xc6\xcc\x11\x4b\x7d\xdb\x66\x0d\x39\x45\x0d\x9a\x78\x9c\x72\x29\xf8\x5e\x83\xf6\x53\xdc\xca\x30\xd6\xa0\x51\x44\x2f\x23\x6b\xd0\xd1\xfb\xb3\xae\x57\xfc\x0f\x62\x8b\xeb\xbc\xaa\xca\x43\x52\xb9\xe8\xaf\xfe\x5a\xae\xc2\x16\x95\x38\x07\x5d\xe8\x59\x4e\xaa\x48\x2a\xfd\x0e\x00\x00\xff\xff\xe9\x8c\xe0\x37\xfb\x02\x00\x00")

func middlewaresLoggingGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresLoggingGotemplate,
		"middlewares/logging.gotemplate",
	)
}

func middlewaresLoggingGotemplate() (*asset, error) {
	bytes, err := middlewaresLoggingGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/logging.gotemplate", size: 763, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2a, 0x37, 0x34, 0x67, 0xdc, 0x1b, 0x3d, 0x72, 0xb6, 0x8e, 0x8e, 0x1f, 0xe7, 0x68, 0x21, 0x7, 0x74, 0x40, 0xeb, 0x5e, 0x94, 0xd5, 0x4f, 0xae, 0x4d, 0xb0, 0xa3, 0x2b, 0xd4, 0x55, 0x74, 0xb3}}
	return a, nil
}

var _middlewaresMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xbf\x6e\xf3\x30\x0c\xc4\xe7\x4f\x4f\x71\xc8\x94\x00\x5f\xe5\xbd\x63\x9b\x0e\x19\x9a\x04\x6d\xd0\x5d\xb6\x18\x47\xa8\x2d\x09\xa4\x1c\x23\x30\xf4\xee\x85\x9d\x3f\xf0\xd0\x6e\xa2\xee\xc7\xbb\x63\x51\xe0\x35\x58\x42\x4d\x9e\xd8\x24\xb2\x28\x2f\x48\xdc\x89\x68\xac\x77\xd8\xee\x0e\x78\x5b\x6f\x0e\x5a\x15\x05\x3e\x88\x3b\xef\x9d\xaf\xaf\x00\x7a\xd7\x34\x08\x67\xe2\x9e\x5d\x22\xa4\x93\x13\x1c\x5d\x43\x13\xfc\x45\x2c\x2e\xf8\x67\x0c\x83\xbe\xbd\x73\x9e\x09\x58\x9b\x44\x73\x75\x9c\x73\x56\x2a\x9a\xea\xdb\xd4\x84\xd6\x59\xdb\x50\x6f\x98\x44\x8d\x7b\x87\xbb\x3d\xaa\xe0\x93\x71\x5e\xe6\x08\x7a\x36\x31\x8e\xdd\x0c\x87\xce\x5b\x90\xb7\x31\x38\x9f\x04\x47\x0e\x2d\x84\xf8\xec\x2a\x92\xff\x4a\xb9\x36\x06\x4e\x58\xaa\x7f\xb1\xc4\x62\x18\xf4\xfe\x65\x33\x7d\xed\x4d\x3a\xe1\x29\xe7\x85\x5a\x4d\x89\xef\x0f\x7b\x58\x92\x8a\x5d\x49\x02\x73\xb7\xc2\xd2\x08\x42\x8c\x41\xc8\x22\x85\x47\xe0\x6a\x56\x4b\xab\x74\x89\x34\x1e\xf9\x79\x5d\xd2\x5b\xd3\x52\xce\xb7\x69\x16\x70\xec\x7c\xb5\x8c\xa5\xfe\x15\x25\x5e\xe1\x6f\xed\x27\x00\x00\xff\xff\x0f\x37\x71\x6a\xc3\x01\x00\x00")

func middlewaresMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresMiddlewaresGotemplate,
		"middlewares/middlewares.gotemplate",
	)
}

func middlewaresMiddlewaresGotemplate() (*asset, error) {
	bytes, err := middlewaresMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/middlewares.gotemplate", size: 451, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0xb7, 0x25, 0xe4, 0xf3, 0xa9, 0x3, 0xd0, 0xad, 0xd4, 0xc4, 0x58, 0x58, 0xa7, 0x11, 0xa9, 0xe5, 0x56, 0xf7, 0xc6, 0xe7, 0x7c, 0xfb, 0xc1, 0xbc, 0x9a, 0xeb, 0xb5, 0xf9, 0xa, 0xc9, 0x27}}
	return a, nil
}

var _middlewaresTraceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x51\x6f\xdb\x46\x0c\x7e\xd6\xfd\x0a\x4e\xc8\x30\xa9\x50\xa5\xf7\x14\x79\x59\xda\x0e\x05\x96\x34\x48\x8c\xbd\x9f\x25\x5a\x3a\x54\xba\xbb\xde\x51\x76\x3c\x41\xff\x7d\xe0\x49\xb6\x65\x3b\xed\x86\x3d\x18\x92\x8e\xe4\x47\xf2\xfb\xc8\x73\x51\xc0\xbd\xa9\x10\x6a\xd4\xe8\x24\x61\x05\xeb\x3d\x90\xeb\xbd\xcf\xe1\xe3\x57\x78\xfc\xba\x82\x4f\x1f\xbf\xac\x72\x51\x14\xf0\x8c\xae\xd7\x5a\xe9\x7a\x72\x80\x9d\x6a\x5b\x30\x5b\x74\x3b\xa7\x08\x81\x1a\xe5\x61\xa3\x5a\x0c\xce\x7f\xa1\xf3\xca\xe8\x5b\x18\x86\x7c\x7e\x1f\xc7\x85\x01\x3e\x4a\xc2\xa5\x95\xbf\xc7\x51\x08\x2b\xcb\x6f\xb2\x46\xe8\x54\x55\xb5\xb8\x93\x0e\xbd\xe0\xb8\xd5\x01\x1e\x4a\xa3\x49\x2a\xed\x97\x2e\xb0\x73\xd2\x5a\xae\x4d\x3a\xd3\xeb\x0a\x50\x57\xd6\x28\x4d\x1e\x36\xce\x74\xe0\xd1\x6d\x55\x89\x3e\x13\x42\x75\xd6\x38\x82\x44\x44\x31\x23\xe1\x2b\xc5\x22\x8a\x37\x1d\xc5\x42\x44\x7f\x2b\xfb\x4d\x69\x88\x6b\x45\x4d\xbf\xce\x4b\xd3\x15\xc6\xa2\x9e\x8e\x8b\xe9\xf1\xbe\x36\x1c\xf1\x2f\x2e\x45\x67\x2a\x6c\x63\x11\xd9\x35\xc4\xc3\x90\x3f\xfd\xfe\x25\x24\x7e\x92\xd4\xc0\xfb\x71\x8c\x45\x2a\xc4\xa6\xd7\x25\xac\x9c\x2c\x95\xae\x1f\x8e\xdd\x24\x04\xef\x26\x9c\x9c\x6d\xe8\x52\xe6\xe9\x65\x6a\x21\x7f\x94\x1d\x8e\xe3\xfc\x75\x0a\x82\x41\x44\x0e\xa9\x77\x1a\x18\x35\xd1\xf8\x4a\x60\xd7\xf9\x9b\x91\x0c\xf9\x63\x1b\x43\x1d\xb0\xe8\xb2\x38\xb6\x45\x14\xca\xba\x05\xca\xf8\x8b\x53\xdd\x02\x00\x3f\xf9\x60\x14\xd1\x28\xc6\xa0\xda\x55\x38\xa8\xce\xb6\xd8\x21\x2b\xf3\x93\x0a\x94\x06\xe3\x2a\x74\x40\x86\x61\x50\x7a\xd5\xee\x03\x1a\x82\xc3\xef\x3d\x7a\xf2\x40\x8d\x33\x7d\xdd\x98\x9e\x40\x42\xa5\x3c\x39\xb5\xee\x79\x86\xfd\xde\x13\x76\xb9\xa0\xbd\xc5\x37\x4a\xf0\xe4\xfa\x92\xb8\xcb\xa9\x8f\x0b\xb6\x45\x68\x08\xe0\x27\xf5\x71\x77\x62\x18\x76\x8a\x1a\xb8\x21\x84\xdb\x3b\xc8\x61\x1c\x45\x34\x0c\x4e\xea\x1a\xe1\x46\xf1\xd9\x0d\xe1\x31\xfc\x01\xa9\x31\x95\x67\xa7\xa8\x28\x60\x18\x6e\xd4\x0c\x79\x45\xc9\x32\xec\x4c\xed\x33\x5a\x02\x8c\x75\x66\xab\x2a\x3c\xeb\x7e\x6e\x18\xb6\xca\xab\xb5\x6a\x15\xed\x73\x11\x45\x61\xd4\x12\xea\xae\xf9\x48\x97\xc5\x24\x25\xbd\xc2\xbc\x17\xf9\xfd\xf4\xcc\x98\x72\x78\x17\x6a\xfb\xc3\xb0\x1f\xdc\xa8\xfc\x79\x92\x61\xb5\xb7\x87\x2a\x53\x48\x78\x15\xaf\x1d\xbd\x35\xda\xe3\xc2\x33\x03\x74\x8e\x7f\xc6\xa5\x61\xa0\x7c\xa0\xf5\xc5\x4a\x9d\x4d\x2a\x57\xf7\xf4\xca\x14\x7a\x2b\xf5\xbd\x43\x49\xc6\x71\x69\x19\x50\x97\x4f\xaa\x65\xbc\x56\xc7\xba\xe3\x94\x61\x2a\xdc\xa0\x83\x13\x58\xfe\x59\x69\xe5\x9b\x64\x69\xb4\x52\x3f\x63\xc9\xf7\x16\xba\xe4\x98\x2b\x83\x65\x09\x17\xc8\x1c\xed\xd0\x4f\x55\xdf\x71\x09\x3c\x21\xf9\x92\xb6\x05\x90\xc3\xef\x21\x1f\x67\xfa\xd3\xd4\xf5\x7f\x4c\x13\xd0\xd3\x29\x15\xaf\xde\xb4\x48\xc3\x80\xba\x1a\x47\x31\x0c\xef\x61\x7a\xe3\x7d\x58\xb0\x02\x25\x3f\xd1\x83\x04\x8d\xbb\x79\x45\xd8\xbe\x5c\x0f\x6a\xf0\xcd\x05\x09\x43\x71\x41\xf1\xb5\xfa\x97\xd7\x51\x06\x5d\x18\xe6\x20\x30\x83\xea\x3a\x85\x64\x76\x99\x3a\xbb\xc0\x48\x79\xd9\xb6\xd2\x81\x2f\x21\xdc\x8b\xc1\x6d\x36\x8a\xc8\x4a\x87\x9a\xf8\x88\x25\x5f\x00\x7d\x76\xa6\x9b\xbd\xb8\xb4\xf4\x83\x88\xd4\x06\x16\xee\xbf\xdc\x81\x56\x6d\xb8\xb0\x7c\x09\x77\x0b\xd3\x21\x35\x6b\x3f\x8a\xc8\x5b\x86\xa6\xfc\x85\xa4\x0b\xf6\xe4\xd4\x43\x76\x48\xf9\x14\xa2\x13\x5f\xa6\xac\x39\x73\x71\xac\xe6\x11\x77\x8b\x42\x32\xf0\x36\x3d\xde\xb7\xde\x66\x50\xd2\xab\x38\x69\x33\xc9\x0e\xad\xa9\x3d\x78\xd3\xf1\xe2\x6e\x8c\xeb\x24\xf1\x3f\x9f\xd2\x64\x82\x22\x41\xa5\x49\xbe\xea\x24\xc5\x3c\x32\x6f\x2a\x11\x22\xce\x88\xbe\x52\x62\xb9\x5a\xcc\x0b\x87\xe4\x2b\x59\x27\xf1\xc3\xd1\x35\x5e\xc6\xa5\x81\x53\x0e\x5a\x92\x79\x8c\xfa\xc4\x48\xd3\x70\xe6\xe1\x3d\x49\xd3\xd3\xfd\x7e\xb6\x4d\x40\xd8\xb6\x1e\x7a\x7f\xd6\xee\xae\x41\x9e\x45\xe4\xbb\x9f\xa7\xd4\x4a\xad\x4a\x30\x65\xd9\x3b\x7f\xea\xfa\xb4\x92\xff\xb7\xf1\xd0\xad\xda\x80\x63\xa1\xdd\x04\x97\xa4\x1f\xe0\xac\xaf\xa2\x80\x1d\xfe\xb6\x45\x68\x64\x75\xa8\x25\x0b\xde\xae\x82\xad\x92\xc0\x7f\xe5\xf3\x0d\x79\x46\xc3\x8f\xc9\x5b\x38\x3d\x31\x5c\x9c\xc1\xa6\xa3\xfc\xc5\x3a\xa5\x69\x93\xc4\xbf\x6e\xe3\x0c\xdc\x81\xb4\x7f\x02\x00\x00\xff\xff\xfc\x09\x2b\x96\x71\x09\x00\x00")

func middlewaresTraceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresTraceGotemplate,
		"middlewares/trace.gotemplate",
	)
}

func middlewaresTraceGotemplate() (*asset, error) {
	bytes, err := middlewaresTraceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/trace.gotemplate", size: 2417, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x86, 0x6b, 0x2f, 0xcc, 0xf, 0xe0, 0xb1, 0x1c, 0x5e, 0x42, 0xc4, 0x60, 0x26, 0xef, 0x4b, 0xff, 0x2e, 0x1a, 0x38, 0x77, 0xad, 0x53, 0x27, 0xa0, 0x6c, 0x89, 0x14, 0x33, 0x12, 0xc6, 0xed, 0x4f}}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\xd6\x08\x16\x52\xa0\xd0\xf7\x2c\x7c\xa9\xd3\x2d\xba\xd8\xa6\x46\x1a\x74\x0f\x45\x51\x30\xd4\x58\x26\x2c\x93\x2a\x49\x3b\x31\x04\xfd\xf7\xc5\x90\x94\x23\x27\x8e\xdb\x43\x10\x8b\xf3\x38\x1f\xef\x0d\x39\x9c\x4e\x61\x6e\x2a\x84\x1a\x35\x5a\xe1\xb1\x82\x87\x3d\x78\xbb\x75\x8e\xc3\xcd\x67\xb8\xfd\x7c\x0f\xef\x6f\x3e\xde\x73\x36\x9d\xc2\x1d\xda\xad\xd6\x4a\xd7\x11\x00\x8f\xaa\x69\xc0\xec\xd0\x3e\x5a\xe5\x11\xfc\x4a\x39\x58\xaa\x06\x03\xf8\x2b\x5a\xa7\x8c\xbe\x86\xae\xe3\xe9\x77\xdf\x8f\x0c\x70\x23\x3c\x8e\xad\xf4\xdd\xf7\x8c\x20\x0b\x21\xd7\xa2\x46\xa8\x6d\x2b\xa1\xb5\x66\xa7\x2a\x74\x20\xa0\xbe\x5b\xcc\x41\x36\x0a\xb5\x87\xa5\xb1\xe0\x57\x48\x0e\xbe\xa0\xdd\x29\x89\xfc\x56\x6c\xb0\xef\xc1\xa5\x4f\xd6\x8e\xdc\x30\xa6\x36\xad\xb1\x1e\x72\x96\x4d\xa4\xd1\x1e\x9f\xfc\x84\x65\x93\xda\x98\xba\x41\x5e\x9b\x46\xe8\x9a\x1b\x5b\x4f\x09\xfd\xb6\x65\xba\x41\x2f\x2a\xe1\x45\x80\x28\xbf\xda\x3e\x70\x69\x36\xd3\x76\x5d\x4f\xd1\x5a\x63\xdd\x84\x1d\x5b\x6a\x73\xb5\x56\x7e\x4a\x7f\xa8\xab\xd6\x28\x4d\x81\xc9\x97\xb7\x42\xbb\x90\xd4\x1b\xf8\x03\x20\x25\xc5\xb2\xe9\x14\xee\x89\xe6\x54\x32\xcb\x26\x5d\xc7\x3f\x86\xca\x16\xc2\xaf\xe0\xaa\xef\x61\xea\x76\x54\x40\xfb\x00\x64\x5c\xbc\x3b\x36\x4f\x58\x11\x38\xbe\xc5\x47\xb0\xe8\xb7\x56\x3b\x10\x7a\x20\x0d\x1e\x84\x5c\xc7\x26\x38\xa6\x5b\x1a\xad\x51\x7a\x65\x34\x87\x8f\x1e\x94\x23\xf2\xc9\x8f\x45\xd7\x1a\xed\xd4\x83\x6a\x94\xdf\x83\x59\x06\x55\xa4\x68\x1a\xb4\xe0\x0d\x54\x4a\x34\x25\x08\x5d\x41\x23\x3c\x5a\x90\x8d\x71\x58\x46\xd0\xb3\x4f\xb6\xdc\x6a\x49\x39\xe5\xb4\x08\x97\x54\x2f\x9f\x87\xd0\x73\xa3\x75\x09\xa6\x25\x9c\x03\xce\xd3\xf2\xe7\xb0\x50\x40\xde\x3e\xf0\x57\x3d\x40\x5f\x68\x4b\x08\x8a\x14\xd0\xb1\x6c\x27\x2c\x48\x99\xaa\x99\x1b\xbd\x54\x35\x63\x19\x35\xd1\x8f\x12\x96\x70\x3d\x03\x2b\x74\x8d\x87\x38\x1d\xcb\x32\xb4\x96\x0c\xcb\xfc\x4f\x29\x0b\x96\x65\x6a\x49\x0e\xe1\x8f\x19\x68\xd5\x04\x44\x16\x19\xa4\xef\x14\xcc\xf1\xff\xac\x68\x73\xb4\xb6\x84\x89\x14\x5a\x1b\x0f\xa2\x6d\x9b\x7d\xf2\x3c\x21\x47\x3d\xcb\x7a\xc6\x32\x39\x2a\xc4\x51\xa4\x6f\xdf\x8f\xda\xe2\xa8\x52\x0a\x77\xca\xfa\x0e\x97\xc6\x62\x4e\xc9\xa4\xb6\xfe\x2a\x9a\x2d\xba\x7b\xf3\xe1\x6e\x31\xff\x94\xba\x35\x97\x92\xaf\x50\x54\x68\x5d\x51\x94\x14\x3e\xeb\xba\x2b\x78\x54\x7e\x05\x17\x1e\x29\x38\xef\x7b\x96\x8d\x56\xdb\x75\x4d\x64\x92\xe9\xc2\x23\x4f\x67\x32\xf2\x4b\xd1\x08\x19\x39\xbb\x50\x03\x68\x50\xe1\x13\xfa\x95\xa9\x5c\x04\x06\xee\xbb\xee\xde\xfc\x6b\x1e\xd1\xc2\x85\x4a\x22\xbd\x4f\xa7\x01\x86\x63\xc1\x87\x95\xb0\x2b\xf0\x4b\x61\xde\xde\x38\x83\x63\x46\x6e\xf1\x31\x92\x92\xc7\xbd\xc4\x88\x2e\xd3\xef\x49\xd7\x0d\x35\xf5\x3d\xef\xba\x71\xbe\x71\x71\x32\x86\xaa\x97\x8b\xef\xb5\x34\x15\x12\xa9\x23\xeb\x1d\xfe\xdc\xa2\xf3\x03\xe6\x06\x4f\x62\xc2\x09\xc1\x01\x14\x1a\xf6\x83\x09\xe4\x5e\x28\x3e\x98\xef\xf7\xed\x90\x48\xd7\x0f\xd8\xa3\x16\xe1\x9c\xa7\xf5\xe2\x40\x55\x5e\x84\x95\xa4\x08\xea\x2a\xa9\x98\x7e\x0d\x3f\xd8\xd0\xa9\x6e\x27\x0f\x7b\x5d\x47\x80\xb1\x86\x2f\x05\xa4\x0b\x23\xb8\x7b\xc5\xfd\x35\x00\x9c\x13\xb5\x7c\x8e\x9d\xf5\x25\x1d\x10\x16\xef\x76\x22\x07\xa2\x4a\x10\xe9\x62\xe7\x73\x88\x53\xe3\x2c\xb3\x74\x1d\x09\x38\xbe\x2d\x79\xdc\x31\x40\xfe\xa6\xfb\xc5\xaf\x44\xb8\xc9\x76\x68\xbd\x03\x41\x7e\xc3\x1d\x77\xa2\x0e\xb0\x48\x87\xd6\x1b\x10\xb0\x75\x68\xaf\x2a\xb3\x11\x4a\xbf\x01\x8d\x31\x38\x2c\xac\xda\x08\xab\x9a\x3d\xed\x59\x6e\x1b\x50\x1a\x44\xba\x74\xd2\x1d\x77\xb6\x90\xfc\x07\xa4\x43\xcc\xe7\xf1\x7f\x19\x5a\xfc\x2e\x24\xa3\xb4\x47\xbb\x14\x12\xbb\xbe\x80\x7c\xf4\x35\xbe\xe8\x62\xde\xd7\xb3\xe7\x7d\x3c\xbf\xfc\x75\xcb\x15\x87\x0e\x09\x0e\x06\xc5\x0e\xfd\xf3\x42\xb9\x78\x18\x7e\x4b\xb9\x73\xe7\xe6\xa4\x70\x71\x43\x42\xbc\xa5\xdb\xaf\x35\x89\x01\x82\x80\x67\x44\x0e\xa8\xdf\x12\xee\x5c\x1d\xa7\x74\x1b\x32\xf8\x4d\xd5\x7e\x86\x19\x94\xf2\x39\xa1\x58\x30\xbc\x21\xd8\xcf\x57\x72\x31\xbf\x6f\xf1\x68\xda\x81\xf3\x76\x2b\x3d\x05\x4b\x83\x00\xbe\x7d\x77\xde\x2a\x5d\xa7\x93\x39\x9e\x36\x51\x18\xaa\x3b\x7c\x05\x01\x36\xa6\x52\x4b\x85\x2e\xce\xee\xc3\xb3\x80\x26\x69\x88\x76\xb4\x9f\xb6\xe6\x97\xe3\x04\x8a\x58\x2e\x8b\x6c\xce\xfd\xd3\x30\xa7\xbe\xa0\xae\xf2\x35\xee\xc3\x70\x8f\x19\x15\xc7\xce\xba\x43\xad\xc1\xad\x81\x53\x8e\xc3\x40\x36\xc3\x94\x83\x19\x90\x4b\x36\x1e\xd1\x34\xf6\xfa\x14\xff\xdc\xac\x0c\xb9\x0c\xe4\x14\x70\x6a\xea\x8e\xbb\xf3\x45\x76\xd2\x3f\xbd\x6e\x86\x4d\x05\x97\xc3\xcb\x91\x7f\xba\x29\x5e\x22\x42\xf2\x34\x27\x5b\xa1\xc6\xca\x64\xc3\x13\x65\xfd\xfc\x44\x09\xe9\x85\xe9\xa8\x96\xb0\x2b\xc1\x04\x9b\xf4\x4f\x3c\x54\x93\xaf\x0b\x9e\xa7\xdc\xff\x22\x63\x1c\xa4\xd1\xf1\x8c\x1e\x23\xc4\x77\xf8\x2c\x61\x5d\xc2\x2e\x4c\x90\x3e\x3c\x4b\xe2\x23\x27\x42\xc7\xcf\x9c\xcb\x4d\x05\x33\x38\x14\xf0\x8f\x51\x3a\xbf\xdc\x54\xe5\xf3\xd2\x82\xf6\x44\xaf\x9c\xf3\xa2\x18\xdc\x25\x66\xa4\x7f\x8a\xec\xff\x1f\x00\x00\xff\xff\x00\xce\x0e\xa6\x70\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3184, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x63, 0x72, 0x1f, 0xe5, 0x3a, 0x45, 0x1, 0x91, 0xd8, 0x5b, 0xa8, 0x47, 0x45, 0x45, 0x98, 0xee, 0x0, 0xf5, 0xc1, 0x3c, 0x43, 0xf0, 0x86, 0x3c, 0xec, 0xbe, 0x2d, 0x84, 0xed, 0x1a, 0x17, 0x6c}}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0xf0, 0x36, 0xf9, 0x16, 0xea, 0x9d, 0x4e, 0x73, 0x64, 0xc5, 0xad, 0xb3, 0x1b, 0x4, 0xe, 0xd8, 0xc8, 0x1e, 0xf7, 0x7a, 0x39, 0x40, 0x4c, 0xb2, 0x12, 0x83, 0x35, 0xca, 0x82, 0x6f, 0xd0}}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x6f\xdc\x38\x12\x3d\x4b\xbf\xa2\x22\x78\xe1\xee\x40\xa6\xef\x0e\x7c\xd8\x4d\xbc\xbb\x06\x36\x1f\x88\xbd\xbb\x87\x20\x08\xd8\x52\xa9\x45\x98\x22\x19\x92\xea\x76\x8f\xa0\xff\x3e\x28\x52\x52\xab\xd3\x4a\x26\x33\xc7\xc1\x1c\x0c\xdb\xfc\x78\x7c\xf5\xaa\xea\x91\xba\xbe\x86\xd7\xba\x44\xd8\xa2\x42\xcb\x3d\x96\xb0\x39\x80\xb7\xad\x73\x0c\xde\xbc\x87\x77\xef\x1f\xe1\xee\xcd\xfd\x23\x4b\xaf\xaf\xe1\x23\xda\x56\x29\xa1\xb6\x71\x01\xec\x85\x94\xa0\x77\x68\xf7\x56\x78\x04\x5f\x0b\x07\x95\x90\x18\x16\xff\x0f\xad\x13\x5a\xdd\x40\xd7\xb1\xe1\xef\xbe\x9f\x4d\xc0\x1b\xee\x71\x3e\x4b\xff\xf7\x7d\x9a\x1a\x5e\x3c\xf1\x2d\x82\xdb\x15\x29\xad\x7f\x1c\x61\xa1\xd0\xca\x73\xa1\x1c\x34\xe8\x6b\x5d\x3a\xf0\x1a\x1a\xfe\x84\x20\x54\x29\x76\xa2\x6c\xb9\x04\x54\xa5\xd1\x42\x79\x07\x95\xd5\x0d\x38\xb4\x3b\x51\xa0\xcb\x09\xc9\xe2\xd7\x16\x9d\x07\xae\x4a\xb0\xe8\x8c\x56\x0e\xc1\x1f\x0c\x06\x24\x5a\x4a\x41\x68\x87\x47\x94\x1c\xb8\x83\x3d\x4a\x49\xbf\x51\x15\xba\x44\xeb\x08\x80\xf0\x4a\x1c\xfe\xaf\xb4\x1d\x36\x06\xb4\x3c\x0c\x70\x12\xa7\x02\xdd\x5a\x70\xad\x31\xda\x92\xb8\xde\x72\xe5\xe8\x6f\x3a\x4e\x70\x29\x7e\xe1\x5e\x68\x45\x68\x95\xb6\x0d\xf7\x8e\xa5\xa9\x68\xc2\x8a\x55\x9a\x64\x55\xe3\xb3\x34\xc9\x28\x72\x7c\xf6\x59\x9a\x26\xd9\x56\xf8\xba\xdd\xb0\x42\x37\xd7\x5b\x7d\xf5\x24\xfc\x35\xfd\x8c\x8c\x69\x89\xd9\x40\xd6\x75\xec\xc3\x3f\xee\x03\xd0\x07\xee\x6b\xb8\xea\xfb\x2c\x5d\x07\x41\xef\x26\x89\x0a\x2d\x25\x16\xde\x8d\x5c\x7d\x3d\x0b\x1d\x7c\xcd\x3d\x14\xba\x31\x14\x18\x57\xc0\xcb\x72\xd4\x93\xc1\xbd\xbf\x74\x04\xd6\x20\x57\x9e\xe4\xdb\x20\xb4\x0e\x4b\xd2\x89\x43\x8d\xd2\xa0\x05\xe7\x6d\x5b\xf8\x9c\xa6\x87\xa3\x96\x4f\x12\xca\x6b\xe0\x04\xe7\x84\xda\x4a\x04\xc3\x2d\x6f\xd0\xa3\xa5\x52\xa2\xf1\x7b\x05\x3c\x66\xc8\xe6\x20\xfc\xa5\xa3\xc3\xaa\x56\x06\xa5\xab\x56\x15\xa4\xe2\x40\x59\x21\x09\xad\x41\x9b\x50\xd1\xa0\x69\xaf\x41\x7b\x35\x1e\x48\x80\x1b\xee\x84\x63\xf0\x4f\x6d\x01\x9f\x79\x63\x24\xe6\x70\xd0\x2d\x34\x62\x5b\x7b\x30\xdc\x51\x96\x67\x52\x11\xc1\xe9\xa0\x78\x8e\xb1\xba\x6c\x0b\x0c\x32\x70\x05\xb5\xf7\x86\xfd\x9b\xab\x52\x12\xc7\xbd\xf0\x35\x20\x2f\xea\xa1\x58\x61\x35\x9e\xbe\x86\xbd\xb0\x58\x42\x6b\x22\xa8\x33\x58\x88\x4a\x14\x60\xb8\xaf\x19\xac\xee\x03\x3f\xe1\x08\x7f\xc3\x37\xf2\x00\x1c\x1a\xe1\x7c\x2c\x74\x28\xd1\x89\xad\xa2\xad\x42\xed\xf4\x13\x06\x29\x1f\x62\x5a\xa6\xc6\x08\x14\xf1\x34\xd9\x31\x19\x04\x31\x2a\xc9\xd6\x73\x75\x0b\x29\x50\xf9\x53\x75\x67\x89\x3b\xf6\x98\x3c\x50\x27\x46\x38\x2c\x7f\x94\x46\xea\x86\xa8\x95\x20\x85\x1b\x8c\x65\x75\xe4\x2b\x94\x47\x5b\x71\x2a\xa8\xe5\x4c\x10\xd8\x74\xd8\x72\x9f\xb7\x2e\x3a\xd2\xd0\x58\xd7\x21\x0f\xef\x70\xff\x7a\x88\xa7\xd0\xcd\x46\xa8\xa0\x53\x33\x50\x9c\x25\x36\x1f\xdc\xc0\xb7\x56\x81\x08\x95\x4c\x04\x0b\x2e\x25\xda\x58\xcc\x03\x59\x96\x86\x70\xce\x04\xed\xd2\xae\xb3\x5c\x6d\x11\x2e\x04\xdc\xdc\x02\x1b\xd7\xbf\x8d\xc9\xe8\xfb\x34\xe9\xba\x0b\xc1\xde\xf1\x06\xfb\x7e\xdc\x0f\x00\x53\x10\x6c\x1c\x4c\xbb\xee\x8a\x46\xfb\x3e\xed\x4f\x7b\xf5\x27\x0e\xa1\xea\x84\xd5\x8c\xe1\x1a\x66\xe7\xae\x0a\xff\x0c\x83\x8f\xb0\xd7\xf1\x77\x4e\xd5\xf0\xd2\x6c\x58\xd7\xfd\x4b\xd3\x32\xb8\x10\xec\x63\x74\xc9\xc7\x83\xc1\x61\xeb\x1a\x56\xe7\x8b\xa2\x7d\xce\x56\xe5\x80\xd6\x6a\xbb\x86\x2e\x4d\x92\xd1\x5e\xc3\x20\x11\x46\xb6\xa0\x01\x71\x22\x0e\xeb\x34\x49\x44\x15\x96\xbe\xb8\x05\x25\x64\xc0\x48\x86\xac\x28\x21\x03\x4c\x9a\x24\x7d\x3a\x8d\x8e\x27\xb0\x9f\xe1\xb6\xce\x09\x25\x4d\xfa\xb4\xeb\xa2\xbc\x24\xee\x5b\x6a\xa9\xb9\xc2\xa1\x69\x2f\x3c\x06\x85\x63\xde\xe6\xa2\x5f\x78\x5c\xd2\x3d\x0a\x4f\x60\x4b\x21\x3a\x08\xf4\xe6\x7b\xe3\x8a\x87\xd0\x83\xeb\xf3\x22\x38\x09\x9e\xb0\x97\x53\x37\xde\x66\x53\x0f\x75\x94\xa8\xe9\x5e\x9b\x0d\xc7\x24\xcc\xb2\x43\xe8\x5f\x29\xa2\x01\x63\x49\xc3\xb3\x22\x08\xfb\x76\x53\x42\x1d\xfb\xa6\xb8\x02\xa3\xb8\x6a\x21\x97\x4b\xd9\x8c\xf9\x9c\x66\x76\x43\x92\xe2\x70\x50\x3f\xe6\x6a\x9e\xb3\xff\x5b\x6e\xfe\x2e\xe5\xdd\x73\x81\xc6\xc3\xde\x72\xe3\xa2\xcd\x4e\xea\x55\x02\x65\x49\x77\xcc\xd0\x9f\xc7\x86\x0d\xe9\x0d\xfe\xb4\x70\x71\xb2\xb7\xa2\x2c\x25\xee\xb9\x8d\xef\x97\xff\xba\xf1\x45\x43\x77\xb9\x31\xf2\x40\x36\x43\xd6\xe9\x09\xbc\x99\x56\x87\xbb\x01\x77\x68\x0f\x53\x2a\xa9\xad\xc8\x45\xc6\xdb\x92\xf0\xde\x1b\xba\x39\xc8\x3d\xf3\x99\x79\x15\x5c\xd1\xcd\x49\xf7\x0d\x96\xb4\x6d\x73\x00\x45\x39\x88\x37\x2a\x3e\x17\xb2\x2d\xb1\x8c\x8f\x99\x0d\x12\x05\x8a\xd9\x60\xc9\xce\xd4\x58\x1d\x39\xe5\x90\x3d\x78\xee\x5b\x97\xe5\x90\x7d\x10\x6a\x9b\xad\xd3\xd1\x1e\x5e\xce\xfc\xe1\x7b\xfb\x61\x41\x95\xfc\xc8\x86\x31\xe6\xbc\x15\x6a\x1b\xca\x49\xa8\x61\xf8\xe6\x16\x1a\x6e\x3e\xc5\xa9\xcf\x51\xfe\xae\xa7\xf4\x93\xad\xfd\x96\x7d\x25\x49\x36\xab\xa8\xec\x06\x26\x80\x3e\x1f\x20\x62\x19\x24\x7d\x9a\x26\x94\x95\x2f\x44\x29\x94\x71\x80\x9e\xe8\x75\xd1\x4e\xbe\xe4\xa0\x9f\x68\x7a\x24\xf8\x09\x9f\x3f\xbf\x82\x17\xfa\x29\x96\xa4\xe1\x4a\x14\xab\xaa\xf1\xec\xc1\x58\xa1\x7c\xb5\xca\xee\x46\x88\x29\x93\x97\x7f\x73\x97\x50\x6a\x74\xa0\xb4\x07\x7c\x16\xce\xbf\x02\x87\x38\x2f\x80\xa9\x86\x1c\xdb\xea\x8c\x48\xad\xd7\x83\x59\x95\x28\xd1\xe3\x6a\x64\x10\xe6\x8e\x01\x08\x55\xe4\xf0\xe5\x18\xc1\xa4\xe4\xcf\x6b\x26\x2a\xda\x05\xb7\xb7\x70\xa2\xde\xd0\x74\x8b\xae\x0b\xb7\x33\xf2\xab\xc5\x25\xeb\xb1\x0b\x4f\x54\x8f\x1d\xf8\x1f\xbe\x41\x89\xe5\xb1\x30\xe2\x77\xc0\x16\xfd\x58\xc6\xf3\xc7\x5d\xac\xe6\x7d\x8d\x6a\x9a\xd5\xb3\xca\x1d\xc0\x62\x01\xe6\xb1\xe1\x86\x9e\x68\xe3\x62\x88\x1f\x17\x3c\x7e\xa1\x88\x82\xde\x38\x56\x14\xf1\xf1\x39\xe3\x50\x8b\xa2\x0e\x5b\x1d\xaa\x25\x0a\xc3\xc5\x3e\xec\x1e\x9f\x35\xda\x0e\xd7\xfa\x79\x54\xc1\x79\x63\x2d\xe7\xe7\x26\xbd\xe0\xdb\xe9\xf7\xe2\xfa\xc3\x36\x75\x46\x2a\x1f\xe2\x0c\x8a\x5b\x2c\x50\xec\xe2\x03\x30\x84\xf8\xcd\xbb\x9a\xc1\x03\xe2\x04\x33\x43\x09\x13\xe3\xbb\x74\xb2\x00\x22\x4a\x45\x59\xa2\xe7\x42\x86\x37\xe4\xd8\x51\xe1\xf3\x64\x78\xfb\x72\x29\xfc\x81\xfd\xc8\x4d\x4e\x62\x9f\x9b\xca\xef\x56\xf4\x2f\xcb\xf9\x53\x5a\xce\xc9\xb6\x7c\xf9\x69\xf8\x3d\x07\xfa\x35\x00\x00\xff\xff\x9a\x16\xde\x59\xb0\x10\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4272, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0x30, 0x93, 0xa5, 0x9f, 0x65, 0x43, 0xe2, 0x5b, 0x4b, 0xe, 0x33, 0x90, 0xa8, 0x3b, 0x7b, 0x3f, 0xbe, 0xbc, 0x3f, 0x60, 0x73, 0x30, 0x1, 0x4, 0x4c, 0x5f, 0x3d, 0x95, 0x45, 0x5f, 0x38}}
	return a, nil
}

var _svcServerEndpointGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x6f\xe3\x38\x0c\x3d\x4b\xbf\x82\x08\x7a\x88\x17\xad\x7c\xd8\x5b\x80\x1c\xb6\x1f\x87\x02\x69\x5a\x6c\x83\xe9\x59\xb1\x59\x47\x88\x22\x79\x28\x39\x9e\x8e\xe0\xff\x3e\xf0\x67\xec\x69\x1a\xcc\x1c\x82\x28\x24\xc5\xf7\xf8\x9e\x98\x38\x86\x3b\x9b\x22\x64\x68\x90\xa4\xc7\x14\xb6\x1f\xe0\xa9\x70\x4e\xc0\xfd\x33\xac\x9f\x37\xf0\x70\xff\xb8\x11\x3c\x8e\xe1\x7f\xa4\xc2\x18\x65\xb2\xb6\x00\x4a\xa5\x35\xd8\x23\x52\x49\xca\x23\xf8\x9d\x72\xf0\xae\x34\x36\xc5\xdf\x90\x9c\xb2\x66\x01\x21\x88\xee\x5c\x55\xa3\x04\xdc\x4b\x8f\xe3\x6c\xfd\xbb\xaa\x38\xcf\x65\xb2\x97\x19\x82\x43\x3a\x22\x71\xae\x0e\xb9\x25\x0f\x73\xce\x59\x1c\xc3\xbf\x29\xbc\x48\xf2\x1f\x9c\xcd\x32\xe5\x77\xc5\x56\x24\xf6\x10\x67\xf6\x66\xaf\x7c\x5c\x7f\xb4\xcd\x66\x9c\x39\x9f\xfe\x54\xf9\x5e\x19\x18\x97\xd9\x1c\x4d\x1b\x8e\xdb\xaf\x9b\xcc\xce\xda\xbe\x9b\x9a\xfc\x2b\xd2\x51\x25\xc8\x59\xbe\x85\x59\x08\xe2\xe5\xf6\xb1\x01\x7f\x91\x7e\x07\x37\x55\x35\xe3\xac\x0e\x4f\x83\x10\xbb\x63\xf2\x45\x66\x27\x4d\xaa\x91\xdc\x17\xe9\x83\x4a\x53\x8d\xa5\x24\x74\x33\x1e\x71\xfe\x5e\x98\x04\xd6\x58\x3e\x98\x34\xb7\xca\x78\x37\xd7\x36\xcb\x90\x40\xdb\x4c\xac\x9a\xe3\x35\xb4\xcc\x37\x24\x13\x24\xf8\x67\x18\x54\xb4\x91\x08\xdc\x31\x11\x43\x03\x08\xcd\x74\xb7\x85\x53\x06\x9d\x83\xd4\x1e\xa4\x32\x82\xb3\xa3\xa4\x46\x61\x95\x20\xe4\x5b\x11\x82\xe8\x86\x17\x6b\x79\xc0\xaa\x7a\x6d\xd5\x67\x81\x33\xd6\xd7\x2d\xa1\x9f\x47\xac\xb1\xec\xea\x3b\x8a\x53\x5e\x11\x67\x35\xec\x1b\xc9\xbc\x17\x15\x4a\xe5\x77\x90\xe2\xbb\x2c\xb4\x87\xd1\xe4\x02\x5e\x11\x6b\xd6\x63\x39\x44\x66\x27\xc0\x25\xc9\xbc\x07\xec\xa2\x5f\x62\x7c\xea\xdd\xb3\xbe\x04\x30\x4c\xf6\x76\x16\xa9\x6a\x5f\x49\xaf\xeb\x54\xc7\x39\x67\x21\x90\x34\x19\xc2\x95\x82\xc5\x12\x06\x2d\x9f\xd0\xef\x6c\xea\x6a\xb7\x39\x63\x21\x6c\xec\xca\x96\x48\x70\xa5\x3a\x99\x87\x86\xcb\xc6\xb7\x27\xb9\xc7\x10\x3e\x65\x47\x44\x42\x40\x93\xd6\xdd\x22\xce\x19\x0e\x36\x2f\x96\x53\xdf\xc3\x1f\x53\xfa\x04\xb6\x00\x00\xb8\x40\xf5\x7a\x44\xa2\x93\xa5\xf1\xe0\x8c\xb5\xbc\x6e\x75\x22\xd9\xda\x78\x7a\xdc\x43\x26\x6a\x0a\xfb\x46\x0e\x35\x26\xf5\x3f\xd1\xe9\x15\xff\x9d\xaf\xbf\xa3\x4e\xbc\x3d\x0b\xcf\x19\xa1\x2f\xc8\x9c\xae\xf1\xaa\x5b\xc7\x29\x65\x65\xa6\x3a\x9f\x59\x37\x65\x1a\x9c\xff\xb4\x5e\xc9\x2d\x6a\x4c\x1f\x7e\x24\x98\xfb\xf9\x98\x64\xbd\xcb\xca\x64\x4f\x43\xa8\xdb\xa2\x68\x44\x45\x99\x09\x87\xfe\x4d\x2a\x73\x61\x5f\xa3\x0b\xb9\x96\x1b\x2c\x27\x3a\xd6\xeb\x3a\x25\x32\x59\xe3\xb9\x32\xd1\x99\x5b\x8f\xc6\x79\x2a\x0e\x68\xbc\xf4\xca\x9a\xd1\x6d\xc2\xef\x05\x3a\x7f\x67\x0b\xe3\xaf\x01\x89\xba\x53\x17\x5f\x49\x8f\x26\xf9\xe8\xfa\x8e\x06\xfd\x15\x00\x00\xff\xff\x29\x27\xae\x7d\x87\x06\x00\x00")

func svcServerEndpointGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerEndpointGotemplate,
		"svc/server/endpoint.gotemplate",
	)
}

func svcServerEndpointGotemplate() (*asset, error) {
	bytes, err := svcServerEndpointGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/endpoint.gotemplate", size: 1671, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x33, 0xca, 0x72, 0xf0, 0xa9, 0x69, 0x11, 0xc6, 0x89, 0xb, 0x83, 0xe3, 0x86, 0x2f, 0xa9, 0x78, 0x33, 0xba, 0x99, 0x3, 0x3e, 0xd3, 0x35, 0x2f, 0x3d, 0xde, 0xd6, 0x1f, 0x31, 0x71, 0x73}}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x7b\x6f\xe3\xb8\x11\xff\x5b\xfa\x14\x73\x02\x5a\xc8\x85\x23\xed\xb6\x77\x7d\xb8\x97\x3f\xf6\xec\xec\x6e\xd0\x24\x6b\x38\xde\x2b\xd0\xa2\x08\x68\x69\x2c\x13\xa1\x48\x95\xa4\x9c\xf5\x1a\xfe\xee\xc5\x90\x92\x2d\xf9\xe2\x3c\xb6\x05\x8a\x33\x90\x98\xe2\xcc\xfc\x34\x2f\xce\x0c\x9d\xa6\x30\x56\x39\x42\x81\x12\x35\xb3\x98\xc3\x62\x03\x56\xd7\xc6\x24\x30\xf9\x04\x37\x9f\xe6\x70\x31\xb9\x9c\x27\x61\x9a\xc2\x0c\x75\x2d\x25\x97\x85\x67\x80\x07\x2e\x04\xa8\x35\xea\x07\xcd\x2d\x82\x5d\x71\x03\x4b\x2e\xd0\x31\xff\x8c\xda\x70\x25\x47\xb0\xdd\x26\xcd\x7a\xb7\xeb\x10\x60\xc2\x2c\x76\xa9\xf4\xbc\xdb\x85\x61\xc5\xb2\x7b\x56\x20\x18\xd4\x6b\xd4\x61\xc8\xcb\x4a\x69\x0b\x71\x08\x00\x10\x2d\x05\x2b\x22\xbf\x54\xa6\x59\x2c\x4b\x1b\x85\x41\x24\xb1\xfd\x4a\x57\xd6\x56\xdd\x75\x5a\x55\x5a\x2d\xa3\x30\x0c\xd2\x14\xfe\x90\xc3\x94\x69\xbb\x09\x83\xa8\x50\xaa\x10\x98\x14\x4a\x30\x59\x24\x4a\x17\x69\xa1\xab\x8c\x24\x0b\x6e\x57\xf5\x22\xc9\x54\x99\x16\xea\xec\x9e\xdb\x94\xfe\x84\x6a\x5f\xfe\x38\xbd\x44\xab\x79\x66\x5e\xc2\x93\x56\x5a\x95\x68\x57\x58\x37\xec\xc6\xe6\x5f\x79\x75\xcf\x65\x4f\x50\x55\x28\xfd\x76\xea\xbf\xce\x0a\xe5\xf9\xfd\x23\x59\xf7\xac\x40\xaa\x91\x7c\x88\xba\x71\x4c\xf3\xba\x83\x06\x3d\x84\xc3\x76\x9a\x09\x8e\xd2\xde\x79\xff\xfc\x42\xe3\x57\x0a\xb9\xa5\x57\xc0\xc5\x61\x4e\xf9\x72\x8b\x7a\xcd\x33\x0c\x83\x6a\x01\xd1\x76\x9b\x4c\x7f\xba\x74\xf1\x9e\x32\xbb\x82\xb3\xdd\x8e\x62\xb1\xdd\x26\xfd\x4d\x48\xcd\x3a\x3b\x41\x59\x31\x99\x0b\xd4\x26\x0a\x07\x61\xb8\x66\x1a\xe2\x30\x98\xe0\x92\xd5\xc2\x8e\x95\x5c\xf2\x02\xfc\x57\x18\x08\x55\x14\xa8\xa1\xfd\x08\x55\x24\x57\x6e\x2b\x0c\x34\xfe\xbb\x46\x63\xc7\xaa\x96\x16\x00\x9a\x90\x25\xee\x19\xb5\x33\x1e\xb5\x6e\xc9\x70\x82\xa5\x41\xb9\x62\x16\x65\xb6\xd9\xb3\x7c\xe4\xc6\xaa\x42\xb3\x32\x0c\x7c\x84\xe6\x9a\x65\x4e\x91\xdf\xed\x73\x20\xf1\x7b\x64\xc3\xb2\x96\x19\x70\xc9\x6d\x3c\x80\x6d\x18\xd0\x01\x48\x6e\xad\xe6\xb2\xf8\x99\xe9\xf8\xb7\x3d\xdb\x92\x6b\xf7\x8e\x77\x79\xae\x87\x10\xf9\x17\x26\x2c\xcf\x75\x34\x84\x68\xf4\xc3\x9b\x3f\xbd\xa1\x85\x67\x32\x20\xb8\xb1\x28\x81\xe8\x68\x4c\x34\x78\x0e\x7c\x82\x8b\xba\x68\xb0\x73\x5a\x77\xa1\xff\xe8\xa0\x1d\xcb\xab\x81\x3f\xce\xe7\xd3\x06\x97\xf2\xa3\x0b\xfb\x83\x83\x25\x86\x57\xa3\x7e\x98\x4d\xc7\x0d\x2a\x9d\xea\x2e\xea\xf7\x0e\xb5\x98\x4d\xc7\x10\x13\xf6\xe0\xd5\xe0\xff\x70\x61\xfa\xac\xc5\x10\xa2\x26\x64\xb5\x16\x51\x63\xc1\x28\x4d\x85\xca\x98\x58\x29\x63\x47\x7f\xf9\xfe\xed\xdb\x94\x55\x3c\x5d\xff\x3e\x35\x15\x93\x86\xb8\xbc\x3c\x90\xcc\xc0\x1f\x87\xcf\x06\x01\xe5\x9a\x6b\x25\x4b\x94\x16\xd6\x4c\x73\xb6\x10\x68\x86\xc0\x97\x60\xd0\x26\xf0\x5e\xb0\xc2\xc0\x8a\xad\x11\x2a\xcd\x95\xe6\x76\xe3\xea\x2f\x5c\xc8\x35\xf1\x9b\x24\x0c\xf8\xd2\x19\x01\xa3\x73\x50\x26\xf9\x80\x16\xe5\x3a\x8e\x26\x17\x3f\x7d\xfe\x70\xf7\x6e\x32\x99\x45\x83\xbf\x7a\x86\xef\xce\x21\x8a\x28\xa3\x82\x13\x51\x86\x73\xc7\x18\x06\xbb\x53\xa8\xd7\x17\xf3\xd9\xe5\xf8\x65\xb0\x87\xcc\x3c\xc2\x75\xd5\xbd\x8f\x3b\xfd\x34\x9b\x13\xa0\x23\x9d\x02\x6c\x93\x06\xce\x61\x59\xda\xe4\xb6\xd2\x5c\xda\x65\x1c\x8d\x7e\x43\x0e\x26\xd1\xc1\x13\xaa\x93\xf4\xcb\x14\xef\xbc\xe7\x19\x77\x50\xc2\xbd\x0c\xb3\x4d\xcd\x0e\xe6\x2e\x0c\x5d\x2f\x76\x25\x2a\x53\xd2\x32\x2e\x0d\xd8\x15\xba\x32\xc2\x35\xe6\xb0\xe4\x28\x72\x03\x4b\xa5\xa1\x6d\xc4\xac\x6d\x93\x76\x53\x61\x2b\x6d\xac\xae\x33\x4b\xaf\xdd\xeb\x6e\x5c\x1e\x53\x25\x6c\x83\xdb\xee\x74\xe2\xd2\x6e\xed\xb5\x6b\x37\xf6\xc9\x0e\xed\x96\xd7\x76\x56\x4b\x30\x96\x69\x6b\x80\x81\xc4\x07\x70\xdd\xc8\x6b\x34\x04\x77\xbc\xda\x07\x26\x73\x60\xe0\xaa\x46\xb3\x07\x0f\xdc\xae\xc8\x40\x42\xaa\x98\x31\x98\x93\xdd\x64\x00\x31\xfb\xea\xec\xab\xdf\xac\x96\x71\xb6\x6c\x2b\x37\x95\x41\x2a\xaf\x14\xf5\x29\x05\x5d\xc8\x38\x3a\x7b\xee\x13\x0d\x7e\x29\x74\x29\xb9\xe5\x4c\xf0\xaf\x5c\x16\x8f\xd1\x5f\x02\xea\xa4\xbc\x42\x4d\x17\xa1\xa6\x72\xee\xda\xc9\x0d\x3e\x5c\xa9\x62\x59\x5a\xdf\x57\x62\x65\x92\x5b\x9b\xa3\xd6\x83\xc7\xf9\xff\xce\xed\x2a\xf6\x3b\x43\x88\x2c\xe5\x31\x6d\x37\xb9\x33\xe7\x25\x1a\xcb\xca\xea\xf3\x7c\xfc\x22\x80\x8c\x09\x81\xba\x0f\x32\x76\x7b\x5e\x7c\x17\x86\x81\xcb\xa9\xbf\xe1\xc6\x50\x2e\xff\xf3\x5f\x3e\xbc\x5b\x6a\x1d\x2b\x95\x53\xa1\x42\xad\x95\x8e\x76\xc7\x76\xf6\x3a\xe4\x39\x1c\xba\x3c\x19\xdd\x34\xc1\xf7\x5a\x95\x71\x6f\xce\x68\xdb\xe3\xa7\xca\x9a\x03\x16\x7d\x6e\x58\x89\xa6\x62\x19\x8e\x68\x0c\x98\xab\x2b\xf5\x80\x1a\x92\x66\x3c\x48\x88\xbc\xdb\xdd\x19\xff\x18\x0d\x7b\xb2\xb7\xf5\xc2\x6c\x8c\xc5\x72\x04\x11\xab\xf8\x11\x95\x44\x47\x7e\x19\x35\x5a\xdf\x65\xa4\xc6\x11\xdf\x47\x14\x55\xcb\x77\x53\x97\x0b\xd4\xa0\x96\xad\x9d\x06\x34\x66\xc8\xd7\x98\x27\x1d\xb1\xdd\x10\xf6\xfe\xdb\xbb\xb4\xef\xa7\xfd\x98\xf0\xab\xf1\x91\x0b\xf8\x2b\x3c\xe4\xf8\xbf\xd5\x3d\x47\x23\xd2\xb1\x93\x6e\xeb\xb2\x64\x7a\xf3\x88\x93\x1a\xca\xff\x3b\x91\xf2\x5a\x33\xcb\x95\xbc\x33\x98\x29\x99\x9b\x27\x3c\x36\x57\x96\x09\xb0\xbc\x44\x30\x15\x35\x78\xa7\x83\x2c\xf6\x29\xf6\x4a\xd7\xf9\xd9\xb6\xfb\x36\xd4\xba\xbb\x56\xba\x47\xa5\x59\x64\x4a\x0d\x15\x00\xce\x21\x3a\xcc\x27\x7f\x7e\x13\xf5\x18\x1b\xdf\x90\xb9\xc4\x78\xd2\x89\x67\xad\x13\xc3\x20\x08\xda\x1b\x86\x47\x3f\xdc\x4d\x28\x8a\xb3\x86\x46\x35\xfc\x30\x38\x1d\x4a\xd8\x61\x95\xe3\x12\x29\x97\x3c\x7f\x32\x16\xca\x60\x7c\x20\x7f\xbd\x98\x0e\xe1\x8e\x2a\xd5\x61\x50\xbe\xc1\x87\x0b\x99\x57\x8a\x4b\x1b\x77\x34\x1f\xee\xed\xed\x88\x77\xa6\xed\xa1\xf3\xd6\x11\x90\x27\xc5\xed\xfb\x87\x1d\x2a\x55\xd6\x2b\x72\xd9\xfe\x65\x5f\x2f\xa6\x83\x03\x36\x77\x07\x81\x1a\xbe\xe4\x02\xfa\x29\xe9\x0b\x32\x5d\x2e\x62\x3a\x5d\x91\x7b\xf7\xa0\xc7\xa2\x4c\x72\xf1\x85\xdb\xf8\xed\x61\x7b\xd7\x0d\xfb\x7f\xdf\xeb\x26\x4a\x22\xfc\x4f\x1a\x5e\x80\x8d\x0b\x5c\xcf\xe8\xf8\xdf\xec\x5b\x4f\xd7\xd3\xcd\x78\x7b\x8d\xd9\x8a\x49\x9e\x31\x01\xb9\x2a\x19\x97\x49\x18\xa0\xd6\x19\x61\x94\xec\x1e\x63\x22\xfb\xb4\x6d\x24\x2e\xa9\x0a\xea\xba\xb2\xd0\xdc\xe9\x92\x30\x28\x54\xfb\x60\x92\x3d\xfd\xa3\xdf\x89\x09\xae\x91\xed\xde\x43\x5a\x41\x1a\x25\xfc\x1d\x2a\xe8\x46\xc4\x6a\x26\x0d\x05\x3c\x6a\xaf\x35\xb4\x68\x2e\x0b\x94\xb1\xfb\x99\x89\xb0\x83\x92\x14\x6e\x33\x9b\x0e\x04\x5e\xd7\x5f\xe2\x01\x51\x12\xaf\x48\x1c\xa5\x0e\xc6\xff\xe8\x90\x46\x43\xcf\xde\x68\xf9\x9e\xb4\x70\x94\xe4\x52\xe6\xf8\x65\xf0\x84\x68\x56\xe6\x82\x4b\x3c\x8d\x30\xf6\x0c\x4f\x61\xd0\x3f\x2e\x9e\xc0\x98\x7a\x86\xa7\x30\xcc\xa6\x5c\x28\x71\x1a\xe2\xd6\xd1\x9f\x42\xb0\x94\x0a\xa7\x01\x5c\xa6\x0c\x9c\x7f\x5d\x4e\xfc\x78\xe6\x39\xaf\x5c\x00\xdf\xc9\xdc\x39\x3a\xee\x45\x63\x08\x25\x0d\xf8\xf1\x3e\xbf\x68\x8e\xfd\x86\x90\xfb\x5b\xf2\x51\xcc\x0f\x53\xf1\x33\x41\xef\x9b\xdc\xfe\xfe\x33\x84\xf6\xb7\x8e\xd6\xd8\xf8\x65\xd6\x75\xef\xef\x3d\xf3\xdc\x0d\x78\xaf\xf7\xcb\xad\x23\xb9\x23\xdb\xda\x4b\x01\xa9\xbf\x72\xc5\x74\x9d\x25\xd7\xec\x1e\x89\xb0\x3f\x4b\xed\x99\x3e\x3e\xcc\xcf\xdb\x70\xb8\xcd\xaf\xba\x16\xb8\xeb\xc0\x37\x58\x40\x72\x47\x16\xb4\x17\x14\xd2\x46\x48\x5f\xca\x47\xe7\x20\xd1\x36\xfa\xc4\x91\xcd\xaa\x47\x98\x8f\xab\x74\x70\xb0\x06\xb5\xf6\x7d\xcc\xd6\x5a\x86\x41\x40\xc3\x71\x60\xf4\xba\xeb\x20\x82\x72\x76\x3e\xe9\x1f\x57\x16\xdd\x2f\x0e\x6d\xb2\x68\x97\x2a\xd5\x22\x99\x61\x41\xfa\xe9\xed\xf6\xa8\x97\x36\x6c\x66\x08\x46\xaf\x7b\x99\x62\x12\xef\x59\x21\xbb\xce\x9c\xd5\xf2\xbb\xb0\xe7\x33\xfc\xc2\xc9\x5d\x3f\x9e\xf9\x2a\xb8\x0b\xc3\xff\x04\x00\x00\xff\xff\x52\xb1\x0a\xd9\xdb\x15\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 5595, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4a, 0x33, 0x3c, 0xc4, 0x59, 0xa8, 0x0, 0x2b, 0x33, 0x7, 0xfe, 0x58, 0x0, 0x2e, 0xbe, 0x52, 0x97, 0x1e, 0x7e, 0x5a, 0xb1, 0x16, 0x90, 0xa4, 0xcc, 0xc8, 0x66, 0xb7, 0xec, 0x37, 0xbc, 0xe6}}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4f\x6f\xdb\xb8\x13\x3d\x8b\x9f\x62\x7e\x46\xf1\x83\x55\xd8\xd4\x9e\x03\xe4\xd2\xa4\xdb\x16\xbb\x6d\x82\xac\xd1\x3d\x14\x45\x41\x4b\x63\x89\xb0\x44\x2a\x24\xed\xc4\x25\xf4\xdd\x17\x43\xfd\xb1\x1c\x3b\x8e\x0f\x01\x62\xf2\xcd\xf0\xcd\x7b\xc3\xa1\x92\x04\x6e\x74\x86\x90\xa3\x42\x23\x1c\x66\xb0\xdc\x81\x33\x1b\x6b\x39\xdc\xde\xc1\xb7\xbb\x05\x7c\xbc\xfd\xb2\xe0\x2c\x49\xe0\x01\xcd\x46\x29\xa9\xf2\x16\x00\x4f\xb2\x2c\x41\x6f\xd1\x3c\x19\xe9\x10\x5c\x21\x2d\xac\x64\x89\x01\xfc\x1d\x8d\x95\x5a\x5d\x81\xf7\xbc\xfb\xbf\x69\x46\x1b\x70\x2b\x1c\x8e\x77\xe9\x77\xd3\x30\x56\x8b\x74\x2d\x72\x04\xbb\x4d\x19\xe1\x17\x7d\x5a\xa8\x8d\xde\xca\x0c\x2d\x58\x34\x5b\x34\x73\x2b\x33\x84\xa5\x54\x99\x54\xb9\x85\x95\x36\xe0\x0a\x84\xfc\xe1\xfe\x06\x9c\x11\xca\xd6\xda\xb8\xc0\xe5\x8b\x83\x8d\x93\xa5\xfc\x8d\x36\x40\x86\xdd\x24\x37\x75\xca\xff\x09\xe9\x38\x63\xb2\xa2\x45\x98\xb2\x68\xa2\xd0\x25\x85\x73\xf5\x84\x45\x93\x54\x2b\x87\xcf\x6e\xc2\x58\x34\xc9\xb5\xce\x4b\xe4\xb9\x2e\x85\xca\xb9\x36\x79\x48\x91\x54\xe8\x44\x26\x9c\x68\x31\xd2\x15\x9b\x25\x4f\x75\x95\xe4\x7a\xbe\x96\x2e\xa1\x3f\x67\x44\x2a\x55\x9e\xfc\x96\xf5\x5a\xaa\x09\x8b\x28\x70\x60\x02\xaf\x47\x8d\xa8\x4e\x58\x64\x5d\xd6\x66\x38\x88\xd0\x35\xaa\x76\xb9\xcb\x3f\xcf\x35\x71\xe9\xf5\xa3\x12\x65\x8a\x2c\xaa\x97\x30\xf1\x9e\xdf\x7f\xf8\x12\x6a\xbd\x17\xae\x80\x79\xd3\x4c\x58\x1c\xc4\xfe\x2a\xd6\xf8\xe9\xe1\xfe\xa6\x95\x04\x2a\xb1\x46\x0b\x02\x2c\x3a\xd0\x2b\x40\x95\xd5\x5a\x2a\x67\x41\x6c\x85\x2c\xc5\xb2\x44\x10\xb4\x1f\x34\xf7\x9e\x77\xc7\xf0\x6f\xa2\xc2\xa6\xe9\x75\x5d\x6d\x54\xfa\x22\xf3\x74\x9f\xea\x63\xff\xdf\x0c\x5a\xea\x0b\x23\x52\x34\xf0\x7e\xa8\x94\xb7\x2b\x33\xd0\xb5\x93\x5a\x59\xe0\x9c\x1f\x88\xd7\x39\x78\x17\xb6\x63\xa8\x97\xfc\x15\x2e\xe0\x59\x64\x47\x58\x0b\x57\xd7\xf0\xe3\xe7\xeb\xc9\x3c\x8b\xa2\x53\xbb\x1f\x70\xa5\x0d\x4e\x7b\xdb\x17\xfa\xa6\xed\x91\x78\xc6\xa2\xe6\xe5\x19\xd7\x20\xea\x1a\x55\x36\x3d\x58\x1e\xca\xe1\x9c\xc7\xec\xd2\x98\x4e\x91\xbd\x92\x41\x9b\xe9\x58\xb9\x98\xb2\x19\x74\x1b\xa3\xe0\xff\x44\xbe\x05\xfa\xd0\x0d\xde\xc3\x42\xff\xad\x9f\xd0\xc0\x81\x42\xd0\x34\x2c\xf2\xde\x08\x95\x23\xbc\x93\xa4\xcb\xb0\xff\x15\x5d\xa1\x33\x4b\x88\xc8\xfb\x3e\xfc\x9d\xec\xa4\xbd\x82\x43\x85\xbe\xe1\x53\x67\x32\x8b\xa2\x68\x30\x9a\x7b\x3f\x84\xf4\x9e\xcf\x08\x71\x8b\xa9\xce\x42\x6f\x8c\x10\x0f\xf8\xb8\x41\xdb\x02\x3e\xaa\x93\x00\x5b\x6b\x65\x31\x20\x0e\x44\xe2\x9c\xd3\x22\x59\xe1\xfd\x9c\x9a\x96\x98\x37\xac\x09\x1d\xbe\x17\x04\x64\x55\x97\x58\x21\x35\x21\x4d\x05\xef\x3f\xe9\x20\xc5\xe9\xd6\x91\xca\xa1\x59\x89\x14\x99\xdb\xd5\x38\xce\x63\x9d\xd9\xa4\x0e\x3c\x7b\x5b\xbf\x13\xf2\x01\xbc\xd0\xef\xb3\x50\x59\x89\x86\xed\xc9\xb7\xcc\xbb\x34\x61\xd0\x8d\x4e\x77\x7a\x5f\xc8\xe5\x35\xbc\x49\x35\x5c\xda\xa9\x85\xf7\xfb\xa3\xe2\x7d\xfa\x81\xfd\x34\x75\xcf\xd0\x0d\x48\xde\x5d\x82\x19\x18\x7c\x84\xf7\xe1\x1a\xee\xf1\x9d\xa3\x8b\x5d\xdd\x93\x8a\x61\x7a\x0c\x6a\x5d\x1d\xa1\x66\x80\xc6\x68\x3a\x9c\x45\xbf\x28\x75\x1d\x56\x88\x36\xf5\xd4\x91\x9e\xed\x0d\xa5\x6e\x21\x6e\x81\x4b\xcc\x22\xb9\x0a\x41\xff\xbb\x06\x25\x4b\x4a\xd5\xdf\x10\x25\xcb\x90\x2f\xdc\xdb\x6e\xcd\x60\xcd\x2f\xa1\x16\xcf\x28\x9c\x35\xcc\xfb\xd6\x28\xb2\xa9\x93\xba\xed\xea\xb7\x75\x4e\x12\x38\x77\x01\x40\xd2\x7c\x7d\xf1\x60\xb5\x01\x1d\xe2\x4f\x32\xca\x15\xc2\x91\x0d\x5b\x34\x34\x9d\x43\xa3\xb7\x33\xf9\xb8\xdf\x4c\x97\xd9\x69\x10\xb0\xb1\x68\xe6\x99\xae\x84\x54\xe7\xc0\x1c\xee\x8d\xac\x84\x91\xe5\x8e\x42\x56\x9b\x12\xa4\x0a\x0f\xc3\x68\xc4\x9f\xab\x63\xfa\xeb\xb8\x4b\xa8\x96\x07\x7c\xdc\x77\xa5\xa7\x96\x18\xfd\x1a\x5b\x4f\x2d\x75\x75\xdd\xc7\x9c\xb2\xe7\xa8\xbd\x46\x7e\x3e\x9e\x71\xaa\x1d\x2f\x17\x39\x75\x76\x12\x9d\xb4\xaa\x8d\xe8\x21\xaf\x79\xf5\xb6\x0b\xdd\x11\xc1\xb3\x33\xce\xd6\xe5\xee\x22\xab\xce\x16\x72\xca\xab\x81\xc1\x85\x66\xd9\x9a\x54\xec\xa3\x2e\xbb\x4d\x23\xbf\x6c\x7d\xca\xb0\xcf\x58\xd6\x68\x2c\x6b\x6b\x38\x7a\x7c\x4f\xcf\xa2\x2a\x1b\x90\xfc\xeb\x6d\xfc\x12\x40\x74\x69\xa2\xae\x67\xb0\x0d\x94\x43\x13\x54\x59\x98\x11\x72\x05\xdb\xf1\xcc\x68\xbf\xa7\x10\xd6\xb8\x0b\x6e\x67\x19\x7d\x30\x6b\x57\x90\xc4\xfd\x29\x34\xa0\x2b\xe1\x60\xba\x8e\xe1\xa9\x90\x69\x11\xa0\x65\x09\x25\xd9\xd5\x65\x11\x2a\x0b\x8f\x0e\x7d\x63\xf2\x1b\xa1\xb4\x92\xa9\x28\x3f\xa3\xc8\xd0\xfc\x85\x3b\xfa\xda\x72\xdd\x41\x56\xb7\x2d\x23\x1d\xa4\x42\xc1\x12\xfb\x14\x69\x8a\xd6\x62\x46\x67\xa3\x74\x05\x9a\xee\x64\xda\x27\x29\xae\x87\x5a\xff\x95\xae\xf8\x2e\xca\x0d\xb6\x23\x91\x6a\xfd\xf1\xc7\xcf\xf8\x4d\xe0\x2b\xec\xa6\xeb\x78\x9f\x21\xbc\xad\x83\x75\xa9\x7b\x66\x0d\xfb\x2f\x00\x00\xff\xff\xd9\xf1\x50\x86\x56\x0c\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 3158, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0xec, 0x15, 0x9a, 0x99, 0xe, 0xb0, 0x8c, 0x22, 0x47, 0xe6, 0x65, 0x97, 0x2, 0x79, 0xe6, 0x59, 0x77, 0xfb, 0x12, 0x54, 0x9c, 0x7e, 0x8, 0x1f, 0x86, 0x63, 0x12, 0xc5, 0x41, 0x55, 0x2d}}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0x57, 0x56, 0xc6, 0xb4, 0xe5, 0x1f, 0xf4, 0x1d, 0xa5, 0xda, 0x23, 0xea, 0x8f, 0xfb, 0xff, 0xae, 0x4b, 0x12, 0xe4, 0xf6, 0xbf, 0x11, 0xa6, 0x4, 0x83, 0x53, 0xfd, 0xbf, 0xce, 0x4a, 0x47}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate":               cmdNameMainGotemplate,
	"handlers/handlers.gotemplate":           handlersHandlersGotemplate,
	"handlers/hooks.gotemplate":              handlersHooksGotemplate,
	"handlers/middlewares.gotemplate":        handlersMiddlewaresGotemplate,
	"middlewares/instrumentation.gotemplate": middlewaresInstrumentationGotemplate,
	"middlewares/logging.gotemplate":         middlewaresLoggingGotemplate,
	"middlewares/middlewares.gotemplate":     middlewaresMiddlewaresGotemplate,
	"middlewares/trace.gotemplate":           middlewaresTraceGotemplate,
	"svc/client/grpc/client.gotemplate":      svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate":      svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate":               svcEndpointsGotemplate,
	"svc/server/endpoint.gotemplate":         svcServerEndpointGotemplate,
	"svc/server/run.gotemplate":              svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate":          svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate":          svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate":    &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate":       &bintree{handlersHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{handlersMiddlewaresGotemplate, map[string]*bintree{}},
	}},
	"middlewares": &bintree{nil, map[string]*bintree{
		"instrumentation.gotemplate": &bintree{middlewaresInstrumentationGotemplate, map[string]*bintree{}},
		"logging.gotemplate":         &bintree{middlewaresLoggingGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate":     &bintree{middlewaresMiddlewaresGotemplate, map[string]*bintree{}},
		"trace.gotemplate":           &bintree{middlewaresTraceGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"endpoint.gotemplate": &bintree{svcServerEndpointGotemplate, map[string]*bintree{}},
			"run.gotemplate":      &bintree{svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
